#include <WiFi.h>
#include <WiFiUDP.h>
#include <HTTPClient.h>

const char *ssid = "POCO F5 Pro";
const char *password = "necesitados";

WiFiUDP udp;
HTTPClient http;

unsigned int localUdpPort = 12345; // Puerto en el que escuchar치 el ESP32
char incomingPacket[255];          // Buffer para almacenar los datos recibidos
String raspberryIP;
String serverPath;

void setup()
{
    Serial.begin(115200);
    Serial.println();

    // Conectar al WiFi
    Serial.print("Conectando a ");
    Serial.println(ssid);
    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED)
    {
        delay(1000);
        Serial.print(".");
    }

    Serial.println("");
    Serial.println("Conectado al WiFi");

    // Mostrar IP del ESP32
    Serial.print("Direcci칩n IP: ");
    Serial.println(WiFi.localIP());

    // Iniciar la escucha UDP
    udp.begin(localUdpPort);
    Serial.printf("Escuchando en UDP, puerto %d\n", localUdpPort);
}

void loop()
{
    // Conseguir la ip del raspberry a traves de udp
    if (raspberryIP == "")
    {
        // Verificar si hay paquetes UDP entrantes
        int packetSize = udp.parsePacket();
        if (packetSize)
        {
            // Recibir el paquete UDP
            int len = udp.read(incomingPacket, 255);
            if (len > 0)
            {
                incomingPacket[len] = 0; // Terminar el string
            }

            // Mostrar detalles del paquete
            // Serial.printf("Paquete UDP recibido desde IP %s, puerto %d\n", udp.remoteIP().toString().c_str(), udp.remotePort());
            // Serial.printf("Tama침o del paquete: %d\n", packetSize);
            // Serial.printf("Paquete: %s\n", incomingPacket);

            // El paquete debe tener la convencion RASPBERRY-IP
            // Verificar si contiene "RASPBERRY-"
            if (strstr(incomingPacket, "RASPBERRY-") != nullptr)
            {
                raspberryIP = udp.remoteIP().toString().c_str();
                serverPath = "http://" + raspberryIP + ":8000";
                Serial.println(raspberryIP);
                udp.stop();

                http.begin(serverPath + "/connected");
                // Send HTTP GET request
                int httpResponseCode = http.GET();

                http.end(); // Free resources
                Serial.println("Se침al de Connected Enviada, HTTPResponseCode:");
            }
            else
            {
                Serial.println("El texto NO contiene 'RASPBERRY-'");
            }
        }
    }
    else
    {
        // Ya tenemos la ip del rapsberry aqui podemos sensar y enviar por http los datos al server del raspberry
        // Codigo de medicion de sensores AQUI !!
        // Peticion para enviar los datos al raspberry
        //  http.begin(serverPath + "/sensor?temp=valor&sensor2=valor&sensor3=valor");
        //     // Send HTTP GET request
        //     int httpResponseCode = http.GET();

        //     http.end(); // Free resources
    }
}
