#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <TinyGPS++.h>
#include <SoftwareSerial.h>

const char* password = "Kore2407";     
const char* apiKey = "LWRUS6CT0UK1BR1U";      
unsigned long canalID = 2659634;
const char* server = "http://api.thingspeak.com";


// Configuración del GPS
TinyGPSPlus gps;
SoftwareSerial gpsSerial(4, 5); // RX, TX (D2 y D1 en ESP8266)

void setup() {
    Serial.begin(9600);
    gpsSerial.begin(9600); // Velocidad del módulo GPS
    WiFi.begin(ssid, password);

    // Conectar a la red Wi-Fi
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("Conectando a WiFi...");
    }
    Serial.println("Conectado a WiFi");
}

void loop() {
    while (gpsSerial.available() > 0) {
        gps.encode(gpsSerial.read());
    }

    if (gps.location.isUpdated()) {
        float lat = gps.location.lat();
        float lng = gps.location.lng();

        Serial.print("Latitud = ");
        Serial.println(lat, 6);
        Serial.print("Longitud = ");
        Serial.println(lng, 6);

        if (WiFi.status() == WL_CONNECTED) {
            WiFiClient client;
            HTTPClient http;

            // Crear la URL para la solicitud
            String url = String(server) + "/update?api_key=" + apiKey + 
                         "&field1=" + String(lat, 6) +  // Limitar a 6 decimales para reducir tamaño
                         "&field2=" + String(lng, 6);  // Limitar a 6 decimales para reducir tamaño

            // Iniciar la conexión HTTP
            http.begin(client, url);

            int httpCode = http.GET(); // Realizar la solicitud GET

            // Verificar el código de respuesta
            if (httpCode > 0) {
                Serial.printf("Código de respuesta: %d\n", httpCode);
                if (httpCode == HTTP_CODE_OK) {
                    String payload = http.getString();
                    Serial.println("Respuesta del servidor:");
                    Serial.println(payload);
                }
            } else {
                Serial.printf("Error en la solicitud: %s\n", http.errorToString(httpCode).c_str());
            }

            http.end(); // Terminar la conexión
        } else {
            Serial.println("Error de conexión Wi-Fi");
        }
    }

    delay(15000);  // Actualización cada 15 segundos
}
